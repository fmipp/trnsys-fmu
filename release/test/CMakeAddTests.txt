# -------------------------------------------------------------------
# Copyright (c) 2013-2017, AIT Austrian Institute of Technology GmbH.
# All rights reserved. See file FMIPP_LICENSE for details.
# -------------------------------------------------------------------

# special function for adding test for FMI++
function( add_test_fmipp TEST_NAME )

   # special treatment for windows, set where to look for dlls when running the tests
   if ( WIN32 )

     # magic substitution. windows and cmake use the semicolon in a different way and fortunately windows uses the usual escape character backslash as path-separator
     if ( INCLUDE_SUNDIALS )
        STRING( REPLACE ";" "/\\;" PATH_FOR_TESTING "$ENV{PATH}${PATH_SEPARATOR}${SUNDIALS_LIBRARYDIR}" )
     else ()
        STRING( REPLACE ";" "/\\;" PATH_FOR_TESTING "$ENV{PATH}" )
     endif ()

     if ( MINGW )

         message( STATUS "Add test " ${TEST_NAME} " (MINGW)" )
         # append the directory with the built shared libraries
         set( PATH_FOR_TESTING "${CMAKE_BINARY_DIR}\\;${PATH_FOR_TESTING}" )
         add_test( fmipp_${TEST_NAME} test/${TEST_NAME} )
         # when adding tests, also add the set_test_properties for windows
         set_tests_properties( fmipp_${TEST_NAME} PROPERTIES ENVIRONMENT "PATH=${PATH_FOR_TESTING}" )

      elseif ( MSVC )

         # dll path depends on configuration (Debug, Release, etc.)
         foreach ( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )

            message( STATUS "Add test " ${TEST_NAME} " for configuration " ${OUTPUTCONFIG} )
            add_test( NAME fmipp_${TEST_NAME}_${OUTPUTCONFIG} CONFIGURATIONS ${OUTPUTCONFIG} COMMAND test/${TEST_NAME} )
            # append the directory with the built shared libraries
            set( PATH_FOR_TESTING_OUTPUTCONFIG "${CMAKE_BINARY_DIR}\\test\\${OUTPUTCONFIG}\\;${CMAKE_BINARY_DIR}\\${OUTPUTCONFIG}\\;${PATH_FOR_TESTING}" )
            # when adding tests, also add the set_test_properties for windows
            set_tests_properties( fmipp_${TEST_NAME}_${OUTPUTCONFIG} PROPERTIES ENVIRONMENT "PATH=${PATH_FOR_TESTING_OUTPUTCONFIG}" )

         endforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )
      endif()
		 
    elseif ( APPLE )

      message( STATUS "Add test ${TEST_NAME} (DARWIN)" )
      add_test( fmipp_${TEST_NAME} test/${TEST_NAME} )
      set_tests_properties( fmipp_${TEST_NAME} PROPERTIES ENVIRONMENT "PATH=${CMAKE_BINARY_DIR}/test" )

    else ( UNIX )

      message( STATUS "Add test ${TEST_NAME} (LINUX)" )
      add_test( fmipp_${TEST_NAME} test/${TEST_NAME} )
      set_tests_properties( fmipp_${TEST_NAME} PROPERTIES ENVIRONMENT "PATH=${CMAKE_BINARY_DIR}/test" )

   endif ()

endfunction( add_test_fmipp )
